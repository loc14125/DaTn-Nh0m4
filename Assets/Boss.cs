using UnityEngine;

public class Boss : MonoBehaviour
{
    [Header("Settings")]
    public Transform player;           // Tham chi·∫øu t·ªõi player
    public float detectRange = 10f;    // Ph·∫°m vi k√≠ch ho·∫°t boss
    public float moveSpeed = 3f;       // T·ªëc ƒë·ªô di chuy·ªÉn khi ƒëu·ªïi player
    public float attackRange = 2f;     // Ph·∫°m vi t·∫•n c√¥ng player
    public float attackCooldown = 2f;  // Th·ªùi gian gi·ªØa c√°c ƒë√≤n t·∫•n c√¥ng

    [Header("References")]
    public GameObject bossModel;       // Th√¢n boss (·∫©n/hi·ªán)
    public Animator animator;          // Animator n·∫øu c√≥

    private bool isActivated = false;  // ƒê√£ spawn hay ch∆∞a
    private bool isDead = false;       // Boss ƒë√£ ch·∫øt ch∆∞a
    private float nextAttackTime = 0f;

    void Start()
    {
        // ·∫®n boss l√∫c ƒë·∫ßu
        bossModel.SetActive(false);
    }

    void Update()
    {
        if (isDead) return;

        float distance = Vector3.Distance(transform.position, player.position);

        // N·∫øu ch∆∞a k√≠ch ho·∫°t v√† player v√†o ph·∫°m vi -> xu·∫•t hi·ªán + spam
        if (!isActivated && distance <= detectRange)
        {
            ActivateBoss();
        }

        // Khi boss ƒë√£ k√≠ch ho·∫°t -> ƒëu·ªïi v√† ƒë√°nh
        if (isActivated)
        {
            FollowAndAttackPlayer(distance);
        }
    }

    void ActivateBoss()
    {
        isActivated = true;
        bossModel.SetActive(true);
        Debug.Log("üî• Boss xu·∫•t hi·ªán! B·∫Øt ƒë·∫ßu spam t·∫•n c√¥ng!");
        SpamAttack();
    }

    void FollowAndAttackPlayer(float distance)
    {
        if (distance > attackRange)
        {
            // ƒêu·ªïi theo player
            transform.position = Vector3.MoveTowards(transform.position, player.position, moveSpeed * Time.deltaTime);
            if (animator) animator.SetBool("isRunning", true);
        }
        else
        {
            // Trong ph·∫°m vi t·∫•n c√¥ng
            if (Time.time >= nextAttackTime)
            {
                nextAttackTime = Time.time + attackCooldown;
                Attack();
            }
        }
    }

    void SpamAttack()
    {
        if (animator) animator.SetTrigger("Spam");
        Debug.Log("üí• Boss spam k·ªπ nƒÉng xu·∫•t hi·ªán!");
        // v√≠ d·ª•: Instantiate(skillPrefab, transform.position, Quaternion.identity);
    }

    void Attack()
    {
        if (animator) animator.SetTrigger("Attack");
        Debug.Log("‚öîÔ∏è Boss t·∫•n c√¥ng player!");
        // G·ªçi animation ho·∫∑c g√¢y s√°t th∆∞∆°ng cho player ·ªü ƒë√¢y
    }

    public void Die()
    {
        if (isDead) return;
        isDead = true;
        if (animator) animator.SetTrigger("Die");
        Debug.Log("‚ò†Ô∏è Boss ƒë√£ ch·∫øt!");
        // C√≥ th·ªÉ th√™m: Destroy(gameObject, 2f);
    }

    void OnDrawGizmosSelected()
    {
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, detectRange);
        Gizmos.color = Color.yellow;
        Gizmos.DrawWireSphere(transform.position, attackRange);
    }
}
